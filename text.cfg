##
# info
##
[info]
description = Plain text formatting rules for Nginx docs
author = Cliff Wells <cliff@nginx.com>
version = 1.0
license = BSD
extension = txt
directory = text


##
# defaults
##
[defaults]
start = do.discard, do.sanitize, do.collapse, do.strip, do.replace, do.combine, do.format, do.prefix, do.indent
end = do.discard, do.sanitize, do.collapse, do.suffix, do.newfile
collapse = True
sanitize = True
debug = False


##
# text substitutions
##
[defines]
pad = (lambda s, c=' ': c * len (s))
tabwidth = 4
cr = "\n"
para = "\n\n"

codeblock = ""
pre = ""
emph = ""

##
# rules
##
[rules]
# discard everthing not under /module/section/directive
^/module(?!/section(\[\d+\])?/directive):
    debug = False
    discard = True

# and process everything else...

/directive(\[\d+\])?$:
    newfile = True
    name = elem.get ('name')
    prefix = "{0}{cr}{1}".format (name, $pad (name, "="), cr=$cr)

/c-def(\[\d+\])?$:

/c-func(\[\d+\])?$:
    suffix = "()"

/link(\[\d+\])?$:
    format = "[{0}|{0}]"

/command(\[\d+\])?$:

/emphasis(\[\d+\])?$:

/header(\[\d+\])?$:

/http-status(\[\d+\])?$:

/literal(\[\d+\])?$:

/path(\[\d+\])?$:

/value(\[\d+\])?$:

/var(\[\d+\])?$:

/comment\(\)(\[\d+\])?$:
    discard = True

/appeared-in(\[\d+\])?$:
    prefix = "{cr}Compatiblity: ".format (cr=$cr)

/context(\[1\])?$: 
    combine = "context"
    prefix = "{cr}Context: ".format (cr=$cr)

/context(\[\d+\]):
    discard = True

/default(\[\d+\])?$:
    prefix = "{cr}Default: ".format (cr=$cr)
    strip = True

/syntax(\[1\])?$:
    name = elem.xpath ('ancestor::directive')[0].get ('name')
    prefix = "{cr}Syntax: {0} ".format (name, cr=$cr)
    strip = True

/syntax(\[\d+\])?$:
    name = elem.xpath ('ancestor::directive')[0].get ('name')
    prefix = "{cr}{0}{1} ".format ($pad ("Syntax: "), name, cr=$cr)
    strip = True
 
/example(\[\d+\])?$:
    prefix = $para$codeblock
    suffix = $codeblock$cr
    indent = $tabwidth
    clean = False
    strip = True

/list(\[\d+\])?/tag-name(\[\d+\])?$:

/list(\[\d+\])?/tag-desc(\[\d+\])?$:

/listitem(\[\d+\])?$:
    prefix = '{cr}   *'.format (cr=$cr)

/list(\[\d+\])?$:
    prefix = $cr
    suffix = $cr

/note(\[\d+\])?$:

/para(\[\d+\])?$:
    prefix = $para

# default processing on anything else
.*:
    debug = True
